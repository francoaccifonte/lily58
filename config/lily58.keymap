/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define LAYOUT( \
    L00, L01, L02, L03, L04, L05,      \
    L10, L11, L12, L13, L14, L15,      \
    L20, L21, L22, L23, L24, L25,      \
              LE0, L32, L33, L34, L35, \
      R00, R01, R02, R03, R04, R05,    \
      R10, R11, R12, R13, R14, R15,    \
      R20, R21, R22, R23, R24, R25,    \
 R30, R31, R32, R33, RE0               \
) { \
    { L05, L04, L03, L02, L01, L00 },  \
    { L15, L14, L13, L12, L11, L10 },  \
    { L25, L24, L23, L22, L21, L20 },  \
    { L35, L34, L33, L32, LE0, KC_NO}, \
    { R00, R01, R02, R03, R04, R05 }, \
    { R10, R11, R12, R13, R14, R15 }, \
    { R20, R21, R22, R23, R24, R25 }, \
    { R30, R31, R32, R33, RE0, KC_NO }\
}

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ----------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                       |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                       |  Y   |  U    |  I    |  O   |   P   | BSPC  |
// | SHIFT |  A  |  S  |  D   |  F   |  G   |                       |  H   |  J    |  K    |  L   |   ;   | ENTER |
// | CTRL  |  Z  |  X  |  C   |  V   |  B   |   "["  |      |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | SYMB |  SPACE |      | SYMB  | RAISE| BSPC  | GUI   |
			bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3    &kp N4   &kp N5                      &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp DELETE
&kp TAB   &kp Q  &kp W  &kp E     &kp R    &kp T                       &kp Y  &kp U    &kp I     &kp O   &kp P    &kp BSPC
&kp LSHFT &kp A  &kp S  &kp D     &kp F    &kp G                       &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp RET
&mo 2     &kp Z  &kp X  &kp C     &kp V    &kp B    &kp LBKT  &kp RBKT &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                        &kp LCTRL &kp LALT &kp LGUI &kp SPACE &mo 2    &mo 1  &kp BSPC &kp RGUI
			>;
		};

		symbol_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  | BT0 | BT1 |  BT2 |  BT3 |  BT4 |                   |      |       |       |      |       |       |
// |  TAB  |  {  |  }  |  <   |  >   |   "  |                   |  _   |   -   |  ^   |  F10 |  F11  |  F12  |
// | SHIFT |  [  |  ]  |  :   |  ;   |   '  |                   |  \   |   +   |  *    |  (   |   )   |   ~   |
// |  CTRL |  (  |  )  |  @   |  #   |   `  |        |  |       |  ~   |   =   |  +    |  {   |   }   |  "|"  |
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&trans     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4                            &trans        &trans         &trans          &trans     &trans     &kp DELETE
&trans     &kp LBRC      &kp RBRC      &kp LESS_THAN     &kp GREATER_THAN  &kp DOUBLE_QUOTES                       &kp UNDER     &kp MINUS      &kp CARET       &trans     &trans     &kp BSPC
&trans     &kp LBKT      &kp RBKT      &kp COLON         &kp SEMICOLON     &kp SINGLE_QUOTE                        &kp BACKSLASH &kp KP_PLUS    &trans          &trans     &trans     &kp RET
&trans     &kp LPAR      &kp RPAR      &kp AT_SIGN       &kp HASH          &kp GRAVE         &trans       &trans   &kp TILDE     &kp EQUAL      &trans          &trans     &trans     &kp RSHFT
                                       &trans            &trans            &trans            &trans       &trans   &trans        &trans         &trans
			>;
		};

		raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  HOME |   ^   |  END |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ->  |       |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans    &trans    &trans
&trans    &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &kp N6      &kp HOME  &kp UP    &kp END   &kp N0    &trans
&trans    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &trans      &kp LEFT  &kp DOWN  &kp RIGHT &trans    &trans
&trans    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &trans   &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT  &kp BSLH
                        &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
	};
};
